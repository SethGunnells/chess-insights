var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getData", ()=>getData
);
parcelHelpers.export(exports, "getLatest", ()=>getLatest
);
const STORAGE_KEY = 'chessInsights:games';
const getData = ()=>{
    const raw = window.localStorage.getItem(STORAGE_KEY);
    if (!raw) return [];
    return JSON.parse(raw);
};
const getLatest = (callback)=>{
    const oldGames = getData();
    const since = oldGames.length > 0 ? oldGames.reduce((result, { lastMoveAt  })=>lastMoveAt > result ? lastMoveAt : result
    , oldGames[0].lastMoveAt) : null;
    let newData = [];
    const worker = new Worker(require("./data.worker.ts"));
    return new Promise((resolve)=>{
        worker.onmessage = ({ data  })=>{
            if (callback) callback(data);
            if (data === null) {
                worker.terminate();
                const games = [
                    ...newData,
                    ...oldGames
                ];
                storeGames(games);
                return resolve(games);
            }
            if (data) newData.unshift(data);
        };
        worker.postMessage(since);
    });
};
const storeGames = (games)=>{
    window.localStorage.setItem(STORAGE_KEY, JSON.stringify(games));
};
